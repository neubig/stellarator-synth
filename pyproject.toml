[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stellarator-synth"
version = "0.1.0"
description = "Synthetic data generation and language model training for stellarator physics simulation"
readme = "README_synthetic_data.md"
license = {file = "LICENSE"}
authors = [
    {name = "OpenHands AI", email = "openhands@all-hands.dev"},
]
maintainers = [
    {name = "OpenHands AI", email = "openhands@all-hands.dev"},
]
keywords = ["stellarator", "physics", "simulation", "machine-learning", "language-models"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pydantic>=1.8.0",
    "joblib>=1.1.0",
    "tqdm>=4.62.0",
    "torch>=1.9.0",
    "transformers>=4.20.0",
    "datasets>=2.0.0",
    "tokenizers>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
]
physics = [
    "constellaration>=0.1.0",
    "vmecpp>=0.1.0",
]
ml-extra = [
    "xgboost>=1.5.0",
    "lightgbm>=3.3.0",
    "pyDOE2>=1.3.0",
]
docs = [
    "sphinx>=4.4.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
]
all = [
    "stellarator-synth[dev,physics,ml-extra,docs]",
]

[project.urls]
Homepage = "https://github.com/neubig/stellarator-synth"
Repository = "https://github.com/neubig/stellarator-synth"
Issues = "https://github.com/neubig/stellarator-synth/issues"
Documentation = "https://github.com/neubig/stellarator-synth#readme"

[project.scripts]
stellarator-synth = "stellarator_synth.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

# Ruff configuration
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by black
    "B008",   # do not perform function calls in argument defaults
    "C901",   # too complex
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.isort]
known-first-party = ["stellarator_synth"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "constellaration.*",
    "vmecpp.*",
    "scipy.*",
    "sklearn.*",
    "matplotlib.*",
    "seaborn.*",
    "joblib.*",
    "tqdm.*",
    "transformers.*",
    "datasets.*",
    "tokenizers.*",
    "torch.*",
    "xgboost.*",
    "lightgbm.*",
    "pyDOE2.*",
]
ignore_missing_imports = true

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["stellarator_synth"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]